const express = require('express');
const bodyParser = require('body-parser');
const mysql = require('mysql');
const validator = require('validator');

//#region ------- SETTINGS -------
let port = process.env.port || 3000;
const app = express();

app.use(bodyParser.urlencoded({extended:false}));
app.use(bodyParser.json());

let connection = mysql.createConnection({

  host: 'db4free.net',
  user:  'nodeunitza',
  password: 'nodeunitza',
  database: 'nodeunitza',
  port: 3306
  //ssl: true
})

connection.connect(function(err) {
  if(err) {
    console.log("Error connecting..."+err.stack);
    return;
  }
  console.log("Connected as ID : " + connection.threadId);

})

//#endregion


//#region ------- GET -------

//ROOT
app.get('/',function(req,res){
  console.log("Passando no : Entrando no GET/");
  res.send("Welcome!");
  
})

//LOGIN 

app.get('/login/:email/:password',function(req,res){
  console.log("Passando no : Entrando no GET/LOGIN");
    let msg_res = {};
     msg_res.status = 200;
     msg_res.message = "";
  
    let login_temp = {};
     login_temp.email = req.params.email;
     login_temp.password = req.params.password;
  
     let error = false;
  
     let status_code = 200;
     let msg_text = "";
    console.log(login_temp);
  
  if(!validator.isEmail(login_temp.email)){
    console.log("Passando no : Login > Validação de formato de E-Mail");
    status_code = 400;
    msg_text = "Invalid E-Mail format";
    error = true;
  
  }
  
  if(!error){
  login_select(login_temp)
  .then((result)=>{
  console.log("Passando no: Login> login_select.Then()")
  
  // Caso não retorne dados compatíveis com e-mail e senha:
  if(parseInt(result.length)== 0){
    console.log("Passando no: Login > login_select.Then() > Verifica resultado = 0");
    status_code = 400;
    msg_text = "Login or Password incorrect,check the data";
  }
  //Se o sistema deixar passar registros duplicados
  if(parseInt(result.length)== 0){
    console.log("Passando no: Login > login_select.Then() > Verifica resultado maior que 1");
    status_code = 400;
    msg_text = "There are problem with your data, please enter in contact with support";
  }
  
  msg_res.status = status_code;
  msg_res.message = msg_text;
  
  //Retorno da mensagem com o status e mensagem 
  res.status(msg_res.status).json(msg_res);
  })
  
  
  .catch((e)=>{
    console.log('Passando no : Login > login_select.Catch()');
    if(e){
      msg_res.status = e.status_code;
      msg_res.message = e.msg_text;
    }
    else{
      msg_res.status = 500;
      msg_res.message = "Unable to perform action. try again soon!";
    }
  
    console.log('===> LOGIN - catch - Erro '+ msg_res.message);
    res.status ( msg_res.status).json(msg_res);
  })  
  }
  else{
    msg_res.status = status_code;
    msg_res.message = msg_text;
    res.status(msg_res.status).json(msg_res);
  }
  

})


//#endregion

//#region ------- POST -------
app.post('/register',function(req,res){
  console.log("Passando no : Entrando no POST/REGISTER");

  let error = false;
  let status_code = 200;
  let msg_text = "";

  let msg_res = {};
   msg_res.status = 200;
   msg_res.message = "";

  let login_temp = {};
  login_temp = req.body;
   login_temp.email = req.body.email;
   login_temp.password = req.body.password;
  console.log(login_temp);
  if(!validator.isEmail(login_temp.email)){
    console.log("Passando no : Login > Validação de formato de E-Mail");
    status_code = 400;
    msg_text = "Invalid E-Mail format";
    error = true;
  }
  if(!error) {

  }
  msg_res.status = status_code;
  msg_res.message = msg_text;

  

   res.status(msg_res.status).json(msg_res);
})

//#endregion


//#region ####### SELECT FUNCTIONS #######

//####LOGIN #####
function login_select(login_temp){
  return new Promise((resolve, reject)=>{
    connection.query
    (
      `
      SELECT * FROM login 
      WHERE email = '${login_temp.email}' and password = '${login_temp.password}'
      `,
      function(error, results){

        let obj_error = { };
        obj_error.msg_text = "===> login_select - Ainda não entrou em Error";

        if(error){
          console.log('Error : login_select dentro da PROMISE' + error);
          obj_error.status_code = 400;
          obj_error.msg_text = error;
          reject(obj_error);
        }

        else{
          console.log('Dentro da PROMISE -> Selecionado: ' + results.length);
          resolve(results);
        }

      }
    );
  })
}

//#endregion

app.listen(port,()=>{
  console.log(`Listening on port ${port}`);
})